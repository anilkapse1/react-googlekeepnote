{"ast":null,"code":"import _defineProperty from\"E:/project/react/react7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"E:/project/react/react7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"E:/project/react/react7/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import Button from'@material-ui/core/Button';import AddCircleIcon from'@material-ui/icons/AddCircle';import useStyles from'./Keepnotecss';import TextField from'@material-ui/core/TextField';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Keepnote=function Keepnote(props){var _useState=useState({title:'',content:''}),_useState2=_slicedToArray(_useState,2),note=_useState2[0],setnote=_useState2[1];var inputEvent=function inputEvent(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setnote(function(oldvalue){return _objectSpread(_objectSpread({},oldvalue),{},_defineProperty({},name,value));});};var addEvent=function addEvent(){if(note.title==\"\"||note.content==\"\"){return false;}else{props.callEvent(note);setnote({title:'',content:''});}};var classes=useStyles();return/*#__PURE__*/_jsx(\"div\",{className:classes.container,children:/*#__PURE__*/_jsxs(\"form\",{className:classes.formSection,noValidate:true,autoComplete:\"off\",children:[/*#__PURE__*/_jsx(TextField,{m:2,id:\"standard-basic\",label:\"title\",name:\"title\",value:note.title,onChange:inputEvent}),/*#__PURE__*/_jsx(TextField,_defineProperty({id:\"outlined-multiline-static\",label:\"type a note\",multiline:true,rows:4,defaultValue:\"Default Value\",variant:\"outlined\",name:\"content\",value:note.content,onChange:inputEvent},\"defaultValue\",\"Default Value\")),/*#__PURE__*/_jsx(Button,{onClick:addEvent,children:/*#__PURE__*/_jsx(AddCircleIcon,{})})]})});};export default Keepnote;","map":{"version":3,"sources":["E:/project/react/react7/src/Keepnote.js"],"names":["React","useState","Button","AddCircleIcon","useStyles","TextField","Keepnote","props","title","content","note","setnote","inputEvent","e","target","name","value","oldvalue","addEvent","callEvent","classes","container","formSection"],"mappings":"2aAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CAEA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,MAAOC,CAAAA,aAAP,KAA0B,8BAA1B,CACA,MAAOC,CAAAA,SAAP,KAAsB,eAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,C,wFAEA,GAAMC,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,CAACC,KAAD,CAAS,eAEEN,QAAQ,CAAC,CAC3BO,KAAK,CAAC,EADqB,CAE3BC,OAAO,CAAC,EAFmB,CAAD,CAFV,wCAEbC,IAFa,eAEPC,OAFO,eAOpB,GAAMC,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACC,CAAD,CAAK,eACCA,CAAC,CAACC,MADH,CACXC,IADW,WACXA,IADW,CACNC,KADM,WACNA,KADM,CAGlBL,OAAO,CAAC,SAACM,QAAD,CAAY,CAChB,sCACOA,QADP,wBAEKF,IAFL,CAEWC,KAFX,GAIH,CALM,CAAP,CAMH,CATD,CAWA,GAAME,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,EAAI,CACf,GAAGR,IAAI,CAACF,KAAL,EAAY,EAAZ,EAAkBE,IAAI,CAACD,OAAL,EAAc,EAAnC,CAAuC,CACnC,MAAO,MAAP,CACH,CAFD,IAGI,CACAF,KAAK,CAACY,SAAN,CAAgBT,IAAhB,EACAC,OAAO,CAAC,CACJH,KAAK,CAAC,EADF,CAEJC,OAAO,CAAC,EAFJ,CAAD,CAAP,CAKH,CACJ,CAZD,CAeA,GAAMW,CAAAA,OAAO,CAAGhB,SAAS,EAAzB,CACA,mBACI,YAAK,SAAS,CAAEgB,OAAO,CAACC,SAAxB,uBAEI,cAAO,SAAS,CAAED,OAAO,CAACE,WAA1B,CAAuC,UAAU,KAAjD,CAAkD,YAAY,CAAC,KAA/D,wBACI,KAAC,SAAD,EACI,CAAC,CAAE,CADP,CAEI,EAAE,CAAC,gBAFP,CAGI,KAAK,CAAC,OAHV,CAII,IAAI,CAAC,OAJT,CAKI,KAAK,CAAEZ,IAAI,CAACF,KALhB,CAMI,QAAQ,CAAEI,UANd,EADJ,cASK,KAAC,SAAD,kBACG,EAAE,CAAC,2BADN,CAEG,KAAK,CAAC,aAFT,CAGG,SAAS,KAHZ,CAIG,IAAI,CAAE,CAJT,CAKG,YAAY,CAAC,eALhB,CAMG,OAAO,CAAC,UANX,CAOG,IAAI,CAAC,SAPR,CAQG,KAAK,CAAEF,IAAI,CAACD,OARf,CASG,QAAQ,CAAEG,UATb,iBAUgB,eAVhB,EATL,cAsBI,KAAC,MAAD,EAAQ,OAAO,CAAEM,QAAjB,uBACI,KAAC,aAAD,IADJ,EAtBJ,GAFJ,EADJ,CAkCH,CApED,CAqEA,cAAeZ,CAAAA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\r\nimport useStyles from './Keepnotecss';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst Keepnote=(props)=>{\r\n\r\n    const [note, setnote]=useState({\r\n        title:'',\r\n        content:'',\r\n    });\r\n\r\n    const inputEvent=(e)=>{\r\n        const {name,value}=e.target;\r\n\r\n        setnote((oldvalue)=>{\r\n            return  {\r\n                ...oldvalue,\r\n                [name]:value    \r\n            }\r\n        })\r\n    }\r\n\r\n    const addEvent=()=>{\r\n        if(note.title==\"\" || note.content==\"\" ){\r\n            return false;\r\n        }\r\n        else{\r\n            props.callEvent(note);\r\n            setnote({\r\n                title:'',\r\n                content:'',\r\n            })\r\n    \r\n        }\r\n    }\r\n\r\n\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.container}>\r\n        \r\n            <form  className={classes.formSection} noValidate autoComplete=\"off\">\r\n                <TextField \r\n                    m={2}\r\n                    id=\"standard-basic\" \r\n                    label=\"title\" \r\n                    name=\"title\" \r\n                    value={note.title} \r\n                    onChange={inputEvent} />\r\n\r\n                 <TextField\r\n                    id=\"outlined-multiline-static\"\r\n                    label=\"type a note\" \r\n                    multiline\r\n                    rows={4}\r\n                    defaultValue=\"Default Value\"\r\n                    variant=\"outlined\"\r\n                    name=\"content\"\r\n                    value={note.content} \r\n                    onChange={inputEvent}\r\n                    defaultValue=\"Default Value\"\r\n                    />    \r\n                \r\n                <Button onClick={addEvent}>\r\n                    <AddCircleIcon/>\r\n                </Button>\r\n            </form> \r\n\r\n          \r\n        \r\n        </div>\r\n    )\r\n}\r\nexport default Keepnote;"]},"metadata":{},"sourceType":"module"}